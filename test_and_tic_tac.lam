(define x (cons 1 (cons 2 (cons 3 nil))))
(define y (map (lambda (x) (+ x 5)) x))
(define z (filter (lambda (x) (= x 2)) x))

;(define identity (lambda (x) x))
;(define add_5 (lambda (x) (+ x 5)))
;(define lst (cons 1 (cons 2 (cons 3 nil))))
;(define lst2 (map add_5 lst))

(define new_row (cons "e" (cons "e" (cons "e" nil))))
(define new_game (cons (new_row) (cons (new_row) (cons (new_row) nil))))

;(define has-all-hoz (lambda (board player) (
;(define has_won


;(defmacro test (a b c) `(if ,a ,b ,c))
;`(+ 3 ,x) => (+ 3 5)
